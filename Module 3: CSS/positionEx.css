/* Element with id sidebar:
	   fixed position (top 20px, left 5px)
	   What happens if you scroll?
	   max-width 80 px
	   color is blue
	   background is cyan */
#sidebar {
	position: fixed;
	top: 20px;
	left: 5px;
	/* If you scroll, the sidebar remains in the exact same spot on the screen*/
	
	max-width: 80px;
	color: blue;
	background-color: cyan;
}



/* h1:
	   relative position, left 80px
	   what happens if you don't make this relative? */
h1 {
	position: relative;
	left: 80px;
	/* If you don't make this relative, it will end up being stuck behind the fixed sidebar */
}



/* paragraph with id shy:
	   no styles applied
	   You might want to experiment with z-index to see if you can get the shy paragraph to appear on top of the sidebar. */
/* #shy {
	position: relative;
	z-index: 2;
} */



/* div with class not-important:
	   set width 110 px
	   set height 100px
	   set background color #00FF00
	   set overflow hidden */
.not-important {
	width: 110px;
	height: 100px;
	background-color: #00FF00;
	overflow: hidden;
}


/* div with class more-important:
	   set width 200px
	   set height 80px
	   set background color pink
	   position relative (top -40px, left 80px)
	   set overflow visible
	   z-index -1 */
.more-important {
	width: 200px;
	height: 80px;
	background-color: pink;
	position: relative;
	top: -40;
	left: 80px;
	overflow: visible;
	z-index: -1;
}



/* div with id lotsaText:
	   position relative (left 50px)
	   background color orange
	   max-width 600px */
#lotsaText {
	position: relative;
	left: 50px;
	background-color: orange;
	max-width: 600px;
}



/* div with class important:
	   width 150 px and height 100px
	   background color yellow
	   position absolute
	   NOTE: fixed is relative to viewport, absolute is relative to nearest positioned ancestor, which in this case is lotsaText)
	   left 300px (300px is from beginning of lotsaText, NOT from end of lotsaText. Try to change this to 5 px to see for yourself)
	   top 0px (Basically aligned with the top of lotsaText)
	   overflow scroll */
.important {
	width: 150px;
	height: 100px;
	background-color: yellow;
	position: absolute;
	left: 300px;
	top: 0px;
	overflow: scroll;
}



/* Reflection question: is there any reason these divs should have a class rather than an id? No, in fact since there's only one of each, an id may have been a better option. If I were to refactor (remember from Software Engineering: improve code quality without changing functionality), I would probably make that change. */
